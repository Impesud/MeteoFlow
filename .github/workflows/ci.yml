name: MeteoFlow CI

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  quality-and-tests:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgis/postgis:15-3.3
        env:
          POSTGRES_USER: airflow
          POSTGRES_PASSWORD: airflow
          POSTGRES_DB: meteo
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U airflow -d meteo"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install black isort flake8 mypy bandit pytest pre-commit

    - name: Run pre-commit hooks (black, isort, flake8, mypy, bandit)
      run: pre-commit run --all-files

    - name: Type check with mypy
      run: mypy src dags

    - name: Run tests
      env:
        POSTGRES_USER: airflow
        POSTGRES_PASSWORD: airflow
        POSTGRES_DB: meteo
        POSTGRES_HOST: localhost
        POSTGRES_PORT: 5432
      run: pytest --maxfail=1 --disable-warnings -q

  docker-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Build Docker image
        run: docker build -t meteoflow:ci .
